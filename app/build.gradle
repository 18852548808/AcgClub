apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'
//ApkChannelPackage
apply plugin: 'channel'
//bugly tinker
//apply from: 'tinker-support.gradle'
//andResGuard
apply from: 'and-res-guard.gradle'

Properties properties = new Properties()
File localPropertiesFile = project.rootProject.file("local.properties");
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}

/**
 * 项目命令行打包指令：gradle resguardRelease rebuildChannel
 */
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.rabtman.acgclub"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        resConfigs rootProject.ext.android.resConfigs
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

        multiDexEnabled true
        renderscriptTargetApi rootProject.ext.android.targetSdkVersion
        renderscriptSupportModeEnabled true
        ndk {
            abiFilters "armeabi"
        }
        vectorDrawables.useSupportLibrary = true

        //阿里用户反馈
        buildConfigField "String", "FEEDBACK_APP_KEY", properties.getProperty("fbAppKey")
        buildConfigField "String", "FEEDBACK_APP_SECRET", properties.getProperty("fbAppSecret")
        //umeng app key
        buildConfigField "String", "UMENG_APP_KEY", properties.getProperty("umengAppKey")
        //umeng share
        buildConfigField "String", "SINA_WEIBO_KEY", properties.getProperty("SINA_WEIBO_KEY")
        buildConfigField "String", "SINA_WEIBO_SECRET", properties.getProperty("SINA_WEIBO_SECRET")
        buildConfigField "String", "QQ_ZONE_ID", properties.getProperty("QQ_ZONE_ID")
        buildConfigField "String", "QQ_ZONE_KEY", properties.getProperty("QQ_ZONE_KEY")
        buildConfigField "String", "WEIXIN_ID", properties.getProperty("WEIXIN_ID")
        buildConfigField "String", "WEIXIN_KEY", properties.getProperty("WEIXIN_KEY")
        //bugly APP ID
        buildConfigField "String", "BUGLY_APP_ID", properties.getProperty("buglyAppId")
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //这里修改apk文件名
                def fileName = "${defaultConfig.applicationId}_base_v${defaultConfig.versionName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    //gradle 3.0
    /*android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-base-${variant.versionName}.apk"
        }
    }*/

    signingConfigs {
        rabtman {
            storeFile file("rabtman.jks")
            storePassword properties.getProperty("storePassword")
            keyAlias properties.getProperty("keyAlias")
            keyPassword properties.getProperty("keyPassword")
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "APP_DEBUG", "true"      //测试模式
            minifyEnabled false
            signingConfig signingConfigs.rabtman
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "APP_DEBUG", "false"
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            signingConfig signingConfigs.rabtman
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

//渠道配置
channel {
    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
    baseOutputDir = new File(project.buildDir, "channel")
    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
    apkNameFormat = 'com.rabtman.acgclub_${flavorName}_v${versionName}'
}

//rebuildChannel
//根据已有基础包重新生成多渠道包
rebuildChannel {
    //baseDebugApk = 已有Debug APK
    baseReleaseApk = new File(project.buildDir, "outputs/apk/com.rabtman.acgclub_base_v${rootProject.ext.android.versionName}.apk")
    //默认为new File(project.buildDir, "rebuildChannel/debug")
    //debugOutputDir = Debug渠道包输出目录
    //默认为new File(project.buildDir, "rebuildChannel/release")
    //releaseOutputDir = Release渠道包输出目录
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':common')
    //ui
    compile 'com.zzhoujay.richtext:richtext:2.5.2'
    compile 'com.ms-square:expandableTextView:0.1.4'
    testCompile rootProject.ext.dependencies["junit"]
    //di
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //canary
    debugCompile rootProject.ext.dependencies["blockcanary-android"]
    releaseCompile rootProject.ext.dependencies["blockcanary-no-op"]
    debugCompile rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile rootProject.ext.dependencies["leakcanary-no-op"]
    //jsoup
    compile project(':jsoup-annotations')
    //阿里用户反馈
    compile 'com.aliyun.ams:alicloud-android-feedback:3.1.0@aar'
    compile 'com.aliyun.ams:alicloud-android-utdid:1.1.5.3'
    compile 'com.aliyun.ams:alicloud-android-ut:5.1.0'
    compile 'com.aliyun.ams:alicloud-android-utils:1.0.3'
    //x5内核
    compile files('libs/tbs_sdk_thirdapp_v3.5.0.1004_43500_sharewithdownload_withoutGame_obfs_20170801_113025.jar')
    //bugly
    compile rootProject.ext.dependencies["crashreport"]
    compile rootProject.ext.dependencies["nativecrashreport"]
    //ApkChannelPackage
    compile rootProject.ext.dependencies["apk-channel-package"]
    //Umeng Share
    compile files('libs/SocialSDK_QQ_Simplify.jar')
    compile files('libs/SocialSDK_Sina_Simplify.jar')
    compile files('libs/SocialSDK_tencentWB.jar')
    compile files('libs/SocialSDK_WeChat_Simplify.jar')
    compile files('libs/umeng_social_api.jar')
    compile files('libs/umeng_social_net.jar')
    compile files('libs/umeng_social_shareboard.jar')
    compile files('libs/umeng_social_shareview.jar')
    compile files('libs/umeng_social_tool.jar')
}
