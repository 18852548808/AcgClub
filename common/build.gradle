apply plugin: 'com.android.library'
apply plugin: 'realm-android'
apply plugin: 'com.alibaba.arouter'

Properties properties = new Properties()
File localPropertiesFile = project.rootProject.file("local.properties");
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        //app version code
        buildConfigField "int", "appVerCode", "" + rootProject.ext.android.versionCode + ""
        //app version name
        buildConfigField "String", "appVerName", "\"" + rootProject.ext.android.versionName + "\""
        //application id
        buildConfigField "String", "applicationId", "\"" + rootProject.ext.android.applicationId + "\""
        //umeng app key
        buildConfigField "String", "UMENG_APP_KEY", properties.getProperty("umengAppKey", "\"\"")
        //umeng share
        buildConfigField "String", "SINA_WEIBO_KEY", properties.getProperty("SINA_WEIBO_KEY", "\"\"")
        buildConfigField "String", "SINA_WEIBO_SECRET", properties.getProperty("SINA_WEIBO_SECRET", "\"\"")
        buildConfigField "String", "QQ_ZONE_ID", properties.getProperty("QQ_ZONE_ID", "\"\"")
        buildConfigField "String", "QQ_ZONE_KEY", properties.getProperty("QQ_ZONE_KEY", "\"\"")
        buildConfigField "String", "WEIXIN_ID", properties.getProperty("WEIXIN_ID", "\"\"")
        buildConfigField "String", "WEIXIN_KEY", properties.getProperty("WEIXIN_KEY", "\"\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //res
    api project(":common-res")
    //router
    api project(":router")
    //ui
    api(rootProject.ext.dependencies["dialog"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["mz-banner"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["bottom-bar"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["toast"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["materialsearchview"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["statusbarutil"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["html-textview"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["loadsir"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api('com.zzhoujay.richtext:richtext:2.5.2') {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api('com.ms-square:expandableTextView:0.1.4') {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    //jsoup
    api project(':third-party-libs:jsoup-annotations')
    //other
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["logger"]
    api(rootProject.ext.dependencies["fragmentation"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["jsoup"]
    api rootProject.ext.dependencies["crashreport"]
    //json
    api rootProject.ext.dependencies["gson"]
    //network
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttp-logging-interceptor"]
    //image
    api rootProject.ext.dependencies["glide"]
    api(rootProject.ext.dependencies["glide-transformations"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["glide-loader-okhttp3"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //rx
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxdownload"]
    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["rxcache"]
    api rootProject.ext.dependencies["rxcache-jolyglot"]
    //di
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api rootProject.ext.dependencies["butterknife"]
    //umeng
    api rootProject.ext.dependencies["umeng"]
    //canary
    /*debugImplementation rootProject.ext.dependencies["blockcanary-android"]
    releaseImplementation rootProject.ext.dependencies["blockcanary-no-op"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-no-op"]*/
    //x5内核
    api files('libs/tbs_sdk.jar')
    //Umeng Share
    api files('libs/SocialSDK_QQ_Simplify.jar')
    api files('libs/SocialSDK_Sina_Simplify.jar')
    api files('libs/SocialSDK_tencentWB.jar')
    api files('libs/SocialSDK_WeChat_Simplify.jar')
    api files('libs/umeng_social_api.jar')
    api files('libs/umeng_social_net.jar')
    api files('libs/umeng_social_shareboard.jar')
    api files('libs/umeng_social_shareview.jar')
    api files('libs/umeng_social_tool.jar')
    //godeye
    implementation 'cn.hikyson.godeye:godeye-core:' + GODEYE_VER
    debugImplementation 'cn.hikyson.godeye:godeye-monitor:' + GODEYE_VER
    releaseImplementation 'cn.hikyson.godeye:godeye-monitor-no-op:' + GODEYE_VER
    implementation 'cn.hikyson.godeye:godeye-toolbox:' + GODEYE_VER
}
